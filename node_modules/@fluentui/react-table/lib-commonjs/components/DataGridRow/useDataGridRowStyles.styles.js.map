{"version":3,"sources":["useDataGridRowStyles.styles.js"],"sourcesContent":["import { makeStyles, mergeClasses } from '@griffel/react';\nimport { createCustomFocusIndicatorStyle } from '@fluentui/react-tabster';\nimport { useTableRowStyles_unstable } from '../TableRow/useTableRowStyles.styles';\nimport { useIsInTableHeader } from '../../contexts/tableHeaderContext';\nimport { useDataGridContext_unstable } from '../../contexts/dataGridContext';\nimport { tableSelectionCellClassNames } from '../TableSelectionCell/useTableSelectionCellStyles.styles';\nexport const dataGridRowClassNames = {\n    root: 'fui-DataGridRow',\n    selectionCell: 'fui-DataGridRow__selectionCell'\n};\nconst useStyles = makeStyles({\n    singleSelectHeader: {\n        ...createCustomFocusIndicatorStyle({\n            [`& .${tableSelectionCellClassNames.root}`]: {\n                opacity: 0\n            }\n        }, {\n            selector: 'focus-within'\n        }),\n        ':hover': {\n            [`& .${tableSelectionCellClassNames.root}`]: {\n                opacity: 0\n            }\n        }\n    },\n    subtleSelection: {\n        ...createCustomFocusIndicatorStyle({\n            [`& .${tableSelectionCellClassNames.root}`]: {\n                opacity: 1\n            }\n        }, {\n            selector: 'focus-within'\n        }),\n        ':hover': {\n            [`& .${tableSelectionCellClassNames.root}`]: {\n                opacity: 1\n            }\n        }\n    }\n});\n/**\n * Apply styling to the DataGridRow slots based on the state\n */ export const useDataGridRowStyles_unstable = (state)=>{\n    'use no memo';\n    const isHeader = useIsInTableHeader();\n    const isSingleSelect = useDataGridContext_unstable((ctx)=>ctx.selection.selectionMode === 'single');\n    const isSubtle = useDataGridContext_unstable((ctx)=>ctx.subtleSelection);\n    const styles = useStyles();\n    useTableRowStyles_unstable(state);\n    state.root.className = mergeClasses(dataGridRowClassNames.root, state.root.className, isSubtle && styles.subtleSelection, isHeader && isSingleSelect && styles.singleSelectHeader);\n    if (state.selectionCell) {\n        state.selectionCell.className = mergeClasses(dataGridRowClassNames.selectionCell, state.selectionCell.className);\n    }\n    return state;\n};\n"],"names":["__styles","mergeClasses","createCustomFocusIndicatorStyle","useTableRowStyles_unstable","useIsInTableHeader","useDataGridContext_unstable","tableSelectionCellClassNames","dataGridRowClassNames","root","selectionCell","useStyles","singleSelectHeader","Bconypa","ff6mpl","subtleSelection","d","h","useDataGridRowStyles_unstable","state","isHeader","isSingleSelect","ctx","selection","selectionMode","isSubtle","styles","className"],"mappings":";;;;;;;;;;;IAMaO,qBAAqB;;;IAoCjBU,6BAA6B;;;;uBA1CL,gBAAgB;yCAEd,sCAAsC;oCAC9C,mCAAmC;iCAC1B,gCAAgC;AAErE,8BAA8B;IACjCT,IAAI,EAAE,iBAAiB;IACvBC,aAAa,EAAE;AACnB,CAAC;AACD,MAAMC,SAAS,GAAA,WAAA,OAAGV,eAAA,EAAA;IAAAW,kBAAA,EAAA;QAAAC,OAAA,EAAA;QAAAC,MAAA,EAAA;IAAA;IAAAC,eAAA,EAAA;QAAAF,OAAA,EAAA;QAAAC,MAAA,EAAA;IAAA;AAAA,GAAA;IAAAE,CAAA,EAAA;QAAA;QAAA;KAAA;IAAAC,CAAA,EAAA;QAAA;QAAA;KAAA;AAAA,CA6BjB,CAAC;AAGS,sCAAuCE,KAAK,IAAG;IACtD,aAAa;IACb,MAAMC,QAAQ,OAAGf,sCAAkB,CAAC,CAAC;IACrC,MAAMgB,cAAc,OAAGf,4CAA2B,GAAEgB,GAAG,GAAGA,GAAG,CAACC,SAAS,CAACC,aAAa,KAAK,QAAQ,CAAC;IACnG,MAAMC,QAAQ,GAAGnB,gDAA2B,GAAEgB,GAAG,GAAGA,GAAG,CAACP,eAAe,CAAC;IACxE,MAAMW,MAAM,GAAGf,SAAS,CAAC,CAAC;QAC1BP,mDAA0B,EAACe,KAAK,CAAC;IACjCA,KAAK,CAACV,IAAI,CAACkB,SAAS,OAAGzB,mBAAY,EAACM,qBAAqB,CAACC,IAAI,EAAEU,KAAK,CAACV,IAAI,CAACkB,SAAS,EAAEF,QAAQ,IAAIC,MAAM,CAACX,eAAe,EAAEK,QAAQ,IAAIC,cAAc,IAAIK,MAAM,CAACd,kBAAkB,CAAC;IAClL,IAAIO,KAAK,CAACT,aAAa,EAAE;QACrBS,KAAK,CAACT,aAAa,CAACiB,SAAS,OAAGzB,mBAAY,EAACM,qBAAqB,CAACE,aAAa,EAAES,KAAK,CAACT,aAAa,CAACiB,SAAS,CAAC;IACpH;IACA,OAAOR,KAAK;AAChB,CAAC"}