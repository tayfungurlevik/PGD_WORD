{"version":3,"sources":["../src/components/NavDrawer/useNavDrawer.ts"],"sourcesContent":["import * as React from 'react';\nimport { Drawer, DrawerProps } from '@fluentui/react-drawer';\nimport { useArrowNavigationGroup } from '@fluentui/react-tabster';\nimport { RefAttributes, slot } from '@fluentui/react-utilities';\n\nimport { useNav_unstable } from '../Nav/useNav';\nimport type { NavDrawerProps, NavDrawerState } from './NavDrawer.types';\n\n/**\n * Create the state required to render NavDrawer.\n *\n * The returned state can be modified with hooks such as useNavDrawerStyles_unstable,\n * before being passed to renderNavDrawer_unstable.\n *\n * @param props - props from this instance of NavDrawer\n * @param ref - reference to root HTMLDivElement of NavDrawer\n */\nexport const useNavDrawer_unstable = (props: NavDrawerProps, ref: React.Ref<HTMLDivElement>): NavDrawerState => {\n  const { tabbable = false, size = undefined } = props;\n\n  const focusAttributes = useArrowNavigationGroup({\n    axis: 'vertical',\n    circular: true,\n    tabbable,\n  });\n\n  const navState = useNav_unstable(\n    {\n      ...props,\n    },\n    ref,\n  );\n\n  return {\n    ...navState,\n    size,\n    components: {\n      // TODO: remove once React v18 slot API is modified\n      // this is a problem with the lack of support for union types on React v18\n      // ComponentState is using React.ComponentType which will try to infer propType\n      // propTypes WeakValidator signature will break distributive unions making this type invalid\n      root: Drawer as React.FC<DrawerProps>,\n    },\n\n    root: slot.always(\n      { ref, role: 'navigation', ...props, ...focusAttributes },\n      {\n        // TODO: remove once React v18 slot API is modified\n        // this is a problem with the lack of support for union types on React v18\n        // ComponentState is using React.ComponentType which will try to infer propType\n        // propTypes WeakValidator signature will break distributive unions making this type invalid\n        elementType: Drawer as React.FC<DrawerProps & RefAttributes<HTMLDivElement>>,\n      },\n    ),\n  };\n};\n"],"names":["React","Drawer","useArrowNavigationGroup","slot","useNav_unstable","useNavDrawer_unstable","props","ref","tabbable","size","undefined","focusAttributes","axis","circular","navState","components","root","always","role","elementType"],"mappings":";;;;+BAiBaK;;;;;;;iEAjBU,QAAQ;6BACK,yBAAyB;8BACrB,0BAA0B;gCAC9B,4BAA4B;wBAEhC,gBAAgB;AAYzC,8BAA8B,CAACC,OAAuBC;IAC3D,MAAM,EAAEC,WAAW,KAAK,EAAEC,OAAOC,SAAS,EAAE,GAAGJ;IAE/C,MAAMK,kBAAkBT,yCAAAA,EAAwB;QAC9CU,MAAM;QACNC,UAAU;QACVL;IACF;IAEA,MAAMM,eAAWV,uBAAAA,EACf;QACE,GAAGE,KAAK;IACV,GACAC;IAGF,OAAO;QACL,GAAGO,QAAQ;QACXL;QACAM,YAAY;YACV,mDAAmD;YACnD,0EAA0E;YAC1E,+EAA+E;YAC/E,4FAA4F;YAC5FC,MAAMf,mBAAAA;QACR;QAEAe,MAAMb,oBAAAA,CAAKc,MAAM,CACf;YAAEV;YAAKW,MAAM;YAAc,GAAGZ,KAAK;YAAE,GAAGK,eAAe;QAAC,GACxD;YACE,mDAAmD;YACnD,0EAA0E;YAC1E,+EAA+E;YAC/E,4FAA4F;YAC5FQ,aAAalB,mBAAAA;QACf;IAEJ;AACF,EAAE"}