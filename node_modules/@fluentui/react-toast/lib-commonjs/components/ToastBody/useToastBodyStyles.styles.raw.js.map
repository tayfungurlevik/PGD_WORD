{"version":3,"sources":["../src/components/ToastBody/useToastBodyStyles.styles.ts"],"sourcesContent":["import { makeResetStyles, makeStyles, mergeClasses } from '@griffel/react';\nimport { tokens } from '@fluentui/react-theme';\nimport type { ToastBodySlots, ToastBodyState } from './ToastBody.types';\nimport type { SlotClassNames } from '@fluentui/react-utilities';\n\nexport const toastBodyClassNames: SlotClassNames<ToastBodySlots> = {\n  root: 'fui-ToastBody',\n  subtitle: 'fui-ToastBody__subtitle',\n};\n\nconst useRootBaseClassName = makeResetStyles({\n  gridColumnStart: 2,\n  gridColumnEnd: 3,\n  paddingTop: '6px',\n  fontSize: tokens.fontSizeBase300,\n  lineHeight: tokens.fontSizeBase300,\n  fontWeight: tokens.fontWeightRegular,\n  color: tokens.colorNeutralForeground1,\n  wordBreak: 'break-word',\n});\n\nconst useSubtitleBaseClassName = makeResetStyles({\n  paddingTop: '4px',\n  gridColumnStart: 2,\n  gridColumnEnd: 3,\n  fontSize: tokens.fontSizeBase200,\n  lineHeight: tokens.fontSizeBase200,\n  fontWeight: tokens.fontWeightRegular,\n  color: tokens.colorNeutralForeground2,\n});\n\nconst useInvertedStyles = makeStyles({\n  root: {\n    color: tokens.colorNeutralForegroundInverted2,\n  },\n  subtitle: {\n    color: tokens.colorNeutralForegroundInverted2,\n  },\n});\n\n/**\n * Apply styling to the ToastBody slots based on the state\n */\nexport const useToastBodyStyles_unstable = (state: ToastBodyState): ToastBodyState => {\n  'use no memo';\n\n  const rootBaseClassName = useRootBaseClassName();\n  const subtitleBaseClassName = useSubtitleBaseClassName();\n  const invertedStyles = useInvertedStyles();\n  state.root.className = mergeClasses(\n    toastBodyClassNames.root,\n    rootBaseClassName,\n    state.backgroundAppearance === 'inverted' && invertedStyles.root,\n    state.root.className,\n  );\n\n  if (state.subtitle) {\n    state.subtitle.className = mergeClasses(\n      toastBodyClassNames.subtitle,\n      subtitleBaseClassName,\n      state.backgroundAppearance === 'inverted' && invertedStyles.subtitle,\n      state.subtitle.className,\n    );\n  }\n\n  return state;\n};\n"],"names":["makeResetStyles","makeStyles","mergeClasses","tokens","toastBodyClassNames","root","subtitle","useRootBaseClassName","gridColumnStart","gridColumnEnd","paddingTop","fontSize","fontSizeBase300","lineHeight","fontWeight","fontWeightRegular","color","colorNeutralForeground1","wordBreak","useSubtitleBaseClassName","fontSizeBase200","colorNeutralForeground2","useInvertedStyles","colorNeutralForegroundInverted2","useToastBodyStyles_unstable","state","rootBaseClassName","subtitleBaseClassName","invertedStyles","className","backgroundAppearance"],"mappings":";;;;;;;;;;;IAKaI,mBAAAA;;;+BAsCAoB;eAAAA;;;uBA3C6C,iBAAiB;4BACpD,wBAAwB;AAIxC,4BAA4D;IACjEnB,MAAM;IACNC,UAAU;AACZ,EAAE;AAEF,MAAMC,2BAAuBP,sBAAAA,EAAgB;IAC3CQ,iBAAiB;IACjBC,eAAe;IACfC,YAAY;IACZC,UAAUR,kBAAAA,CAAOS,eAAe;IAChCC,YAAYV,kBAAAA,CAAOS,eAAe;IAClCE,YAAYX,kBAAAA,CAAOY,iBAAiB;IACpCC,OAAOb,kBAAAA,CAAOc,uBAAuB;IACrCC,WAAW;AACb;AAEA,MAAMC,2BAA2BnB,0BAAAA,EAAgB;IAC/CU,YAAY;IACZF,iBAAiB;IACjBC,eAAe;IACfE,UAAUR,kBAAAA,CAAOiB,eAAe;IAChCP,YAAYV,kBAAAA,CAAOiB,eAAe;IAClCN,YAAYX,kBAAAA,CAAOY,iBAAiB;IACpCC,OAAOb,kBAAAA,CAAOkB,uBAAuB;AACvC;AAEA,MAAMC,wBAAoBrB,iBAAAA,EAAW;IACnCI,MAAM;QACJW,OAAOb,kBAAAA,CAAOoB,+BAA+B;IAC/C;IACAjB,UAAU;QACRU,OAAOb,kBAAAA,CAAOoB,+BAA+B;IAC/C;AACF;AAKO,oCAAoC,CAACE;IAC1C;IAEA,MAAMC,oBAAoBnB;IAC1B,MAAMoB,wBAAwBR;IAC9B,MAAMS,iBAAiBN;IACvBG,MAAMpB,IAAI,CAACwB,SAAS,OAAG3B,mBAAAA,EACrBE,oBAAoBC,IAAI,EACxBqB,mBACAD,MAAMK,oBAAoB,KAAK,cAAcF,eAAevB,IAAI,EAChEoB,MAAMpB,IAAI,CAACwB,SAAS;IAGtB,IAAIJ,MAAMnB,QAAQ,EAAE;QAClBmB,MAAMnB,QAAQ,CAACuB,SAAS,OAAG3B,mBAAAA,EACzBE,oBAAoBE,QAAQ,EAC5BqB,uBACAF,MAAMK,oBAAoB,KAAK,cAAcF,eAAetB,QAAQ,EACpEmB,MAAMnB,QAAQ,CAACuB,SAAS;IAE5B;IAEA,OAAOJ;AACT,EAAE"}